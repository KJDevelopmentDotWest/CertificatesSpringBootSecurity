package com.epam.esm.service.expecption;

import java.util.Arrays;
import java.util.Objects;

public enum ExceptionCode {
    UNKNOWN_EXCEPTION(0),
    ID_IS_NULL(1),
    OPERATION_IS_NOT_SUPPORTED(2),
    INTERNAL_DB_EXCEPTION(3),

    THERE_IS_NO_GIFT_CERTIFICATE_WITH_PROVIDED_ID(100),
    GIFT_CERTIFICATE_CANNOT_BE_NULL(101),
    GIFT_CERTIFICATE_ID_CANNOT_BE_NULL(102),
    GIFT_CERTIFICATE_ID_CANNOT_BE_NEGATIVE(103),
    GIFT_CERTIFICATE_NAME_CANNOT_BE_NULL(104),
    GIFT_CERTIFICATE_NAME_TOO_SHORT(105),
    GIFT_CERTIFICATE_NAME_TOO_LONG(106),
    GIFT_CERTIFICATE_NAME_STARTS_WITH_WHITESPACE(107),
    GIFT_CERTIFICATE_NAME_ENDS_WITH_WHITESPACE(108),
    GIFT_CERTIFICATE_DESCRIPTION_CANNOT_BE_NULL(109),
    GIFT_CERTIFICATE_DESCRIPTION_STARTS_WITH_WHITESPACE(110),
    GIFT_CERTIFICATE_DESCRIPTION_ENDS_WITH_WHITESPACE(111),
    GIFT_CERTIFICATE_PRICE_CANNOT_BE_NULL(112),
    GIFT_CERTIFICATE_PRICE_IS_NOT_POSITIVE_REAL_NUMBER(113),
    GIFT_CERTIFICATE_DURATION_CANNOT_BE_NULL(114),
    GIFT_CERTIFICATE_DURATION_IS_NEGATIVE(115),
    GIFT_CERTIFICATE_CREATE_DATE_CANNOT_BE_NULL(116),
    GIFT_CERTIFICATE_CREATE_DATE_CANNOT_POINT_TO_FUTURE(117),
    GIFT_CERTIFICATE_LAST_UPDATE_DATE_CANNOT_BE_NULL(118),
    GIFT_CERTIFICATE_LAST_UPDATE_DATE_CANNOT_POINT_TO_FUTURE(119),
    GIFT_CERTIFICATE_TAG_LIST_CANNOT_BE_NULL(120),

    THERE_IS_NO_TAG_WITH_PROVIDED_ID(200),
    TAG_CANNOT_BE_NULL(201),
    TAG_ID_CANNOT_BE_NULL(202),
    TAG_ID_CANNOT_BE_NEGATIVE(203),
    TAG_NAME_CANNOT_BE_NULL(204),
    TAG_NAME_TOO_SHORT(205),
    TAG_NAME_TOO_LONG(206),
    TAG_NAME_STARTS_WITH_WHITESPACE(207),
    TAG_NAME_ENDS_WITH_WHITESPACE(208),
    TAG_NAME_MUST_BE_UNIQUE(209),
    THERE_IS_NO_TAG_WITH_PROVIDED_NAME(210);

    private final Integer exceptionCode;

    ExceptionCode(Integer exceptionCode){
        this.exceptionCode = exceptionCode;
    }

    public Integer getExceptionCode(){
        return exceptionCode;
    }

    public static ExceptionCode getByExceptionCode(Integer id){
        return Arrays.stream(ExceptionCode.values())
                .filter(exceptionCode -> Objects.equals(exceptionCode.getExceptionCode(), id))
                .findFirst()
                .orElse(UNKNOWN_EXCEPTION);
    }
}
